how to update django server

[18:35:25] +FunkyBob git pull ; git clean -fdx ; ./manage.py migrate ; touch {whatever file triggers your WSGI app server to restart}
[18:35:45] +FunkyBob oh and a manage.py collectstatic


git reset --hard
git pull
git clean -fdx
npm install
python3 manage.py migrate
python3 manage.py makemigrations
python3 manage.py migrate
python3 manage.py collectstatic
turn off Debug mode






git help



[02:54:20] jast 1) just changing (in this case deleting) the files in your local checkout, 2) changing them in the "staging area" (where you prepare your next commit), 3) committing the change to make it part of your history, 4) pushing the commit to a remote repository, e.g. GitHub
[02:54:55] jast 'git rm' without the '--cached' flag does (1) and (2), but not (3) and (4) -- you'd do those by following up with 'git commit' and 'git push'
[02:55:02] jast so it doesn't do anything "online" by itself
[02:55:34] jast if you use --cached, it does (2) only ("cache" is a somewhat outdated alternative name for the staging area, but we're stuck with the name in some of the options now :))
[02:56:15] jast the staging area is also called "index", just to muddle things up further
[02:56:35] jast so if you come across any of those three terms, keep in mind there is no difference whatsoever, they mean the exact same thing :)
[02:57:29] jast anyway, if you do the full cascade of 'git rm', 'git commit' and 'git push', the only difference that initial --cached makes is that (1) is skipped